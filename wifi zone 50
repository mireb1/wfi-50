// MirebWifiSystem.tsx
import React, { useState, useEffect } from 'react';
import {
  Wifi, CreditCard, CheckCircle, QrCode, Router, Users, DollarSign, Calendar
} from 'lucide-react';

/* 1️⃣  Capacitor plugins – if they’re not available the code keeps working. */
let WifiPlugin: any, BarcodePlugin: any, HttpPlugin: any;
try {
  WifiPlugin  = require('@capacitor-community/wifi').Wifi;
  BarcodePlugin = require('@capacitor-community/barcode-scanner').BarcodeScanner;
  HttpPlugin    = require('@capacitor-community/http').Http;
} catch { /* ignore – will use mocks */ }

const MirebWifiSystem = () => {
  /* ------------------ existing state ------------------ */
  const [activeTab, setActiveTab] = useState('dashboard');
  const [vouchers, setVouchers]   = useState([]);
  const [payments, setPayments]   = useState([]);
  const [routers, setRouters]     = useState([
    { id: 1, name: 'Kinshasa-Central', status: 'online', users: 45, location: 'Kinshasa' },
    { id: 2, name: 'Lubumbashi-Nord',  status: 'online', users: 32, location: 'Lubumbashi' },
    { id: 3, name: 'Bukavu-Centre',    status: 'online', users: 28, location: 'Bukavu' },
    { id: 4, name: 'Goma-Ville',       status: 'offline', users: 0, location: 'Goma' }
  ]);
  const [newPayment, setNewPayment] = useState({ phone: '', amount: 7, method: 'mpesa' });

  /* 2️⃣  NEW – real scan, QR, RADIUS */
  const [networks, setNetworks] = useState([]);
  const [selectedNetwork, setSelectedNetwork] = useState(null);
  const [voucherInput, setVoucherInput] = useState('');
  const [connected, setConnected] = useState(false);

  /* --------------- Wi-Fi scan --------------- */
  const scanWifi = async () => {
    if (!WifiPlugin) {                          // fallback
      setNetworks([
        { ssid: 'Mireb-Kinshasa-Central', signal: 87, security: 'WPA2', routerId: 1 },
        { ssid: 'Mireb-Lubumbashi-Nord',  signal: 72, security: 'WPA2', routerId: 2 },
        { ssid: 'Mireb-Bukavu-Centre',    signal: 91, security: 'WPA2', routerId: 3 },
        { ssid: 'Mireb-Goma-Ville',       signal: 54, security: 'WPA2', routerId: 4 },
      ]);
      return;
    }

    const { ssids } = await WifiPlugin.getSSID();
    const mirebNets = (ssids || [])
      .filter((s: any) => s.SSID?.startsWith('Mireb-'))
      .map((s: any) => ({
        ssid: s.SSID,
        signal: s.level || 0,
        security: s.capabilities || 'WPA2',
        routerId: routers.find(r => s.SSID.includes(r.location))?.id || 0
      }));
    setNetworks(mirebNets);
  };

  /* --------------- QR scan --------------- */
  const openScanner = async () => {
    if (!BarcodePlugin) return alert('Scanner non disponible sur ce device');
    await BarcodePlugin.checkPermission({ force: true });
    const { content } = await BarcodePlugin.startScan();
    if (content) setVoucherInput(content);
  };

  /* --------------- RADIUS / CoovaChilli --------------- */
  const authenticate = async () => {
    const voucher = vouchers.find(v => v.code === voucherInput && v.status === 'active');
    if (!voucher) return alert('Voucher invalide ou déjà utilisé');

    // 3️⃣  Real API call
    if (HttpPlugin) {
      const { data } = await HttpPlugin.post({
        url: 'https://radius.mireb.rdc/connect',
        data: { voucher: voucherInput, ssid: selectedNetwork.ssid, mac: '00:00:00:00:00' }
      });
      if (!data?.success) return alert(data?.message || 'Erreur RADIUS');
    }

    // Success
    setConnected(true);
    setVouchers(vouchers.map(v => v.code === voucherInput ? { ...v, used: true } : v));
  };

  /* --------------- existing helpers --------------- */
  const generateVoucherCode = () => {
    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    let code = '';
    for (let i = 0; i < 12; i++) code += chars.charAt(Math.floor(Math.random() * chars.length));
    return code;
  };
  const processPayment = () => { /* unchanged */ };

  /* --------------- stats --------------- */
  const totalUsers    = routers.reduce((s, r) => s + r.users, 0);
  const activeVouchers = vouchers.filter(v => v.status === 'active').length;
  const totalRevenue   = payments.reduce((s, p) => s + p.amount, 0);

  /* --------------- renders --------------- */
  const renderDashboard = () => ( /* unchanged */ );
  const renderPayment   = () => ( /* unchanged */ );
  const renderVouchers  = () => ( /* unchanged */ );

  /* --------------- NEW CONNECT RENDER --------------- */
  const renderConnect = () => {
    useEffect(() => { scanWifi(); }, []);

    if (connected) {
      return (
        <div className="max-w-md mx-auto bg-green-50 border border-green-200 rounded-lg p-8 text-center">
          <CheckCircle className="h-16 w-16 text-green-600 mx-auto mb-4" />
          <h3 className="text-xl font-bold text-green-800">Connecté à {selectedNetwork?.ssid}</h3>
          <p className="mt-2 text-sm text-green-700">Amusez-vous bien sur Mireb Wi-Fi !</p>
          <button
            onClick={() => { setConnected(false); setSelectedNetwork(null); setVoucherInput(''); }}
            className="mt-6 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700"
          >
            Me déconnecter
          </button>
        </div>
      );
    }

    if (selectedNetwork) {
      return (
        <div className="max-w-md mx-auto bg-white p-6 rounded-lg border border-gray-200">
          <h3 className="text-lg font-semibold mb-4 flex items-center">
            <Wifi className="h-5 w-5 mr-2" />
            Connexion à {selectedNetwork.ssid}
          </h3>

          <div className="flex space-x-2 mb-4">
            <input
              type="text"
              value={voucherInput}
              onChange={e => setVoucherInput(e.target.value.toUpperCase())}
              placeholder="Code voucher"
              className="flex-1 p-3 border border-gray-300 rounded-lg"
            />
            <button
              onClick={openScanner}
              className="p-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700"
            >
              <QrCode className="h-5 w-5" />
            </button>
          </div>

          <button
            onClick={authenticate}
            className="w-full bg-blue-600 text-white py-3 rounded-lg hover:bg-blue-700"
          >
            Se connecter
          </button>

          <button
            onClick={() => setSelectedNetwork(null)}
            className="w-full mt-2 text-sm text-gray-600 underline"
          >
            Annuler
          </button>
        </div>
      );
    }

    return (
      <div className="space-y-4">
        <h3 className="text-lg font-semibold mb-4 flex items-center">
          <Wifi className="h-5 w-5 mr-2" />
          Réseaux Mireb détectés
        </h3>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          {networks.map(n => (
            <button
              key={n.ssid}
              onClick={() => setSelectedNetwork(n)}
              className="p-4 border border-gray-200 rounded-lg hover:border-blue-500 hover:shadow flex items-center space-x-4 text-left"
            >
              <Wifi className="h-6 w-6 text-blue-600" />
              <div>
                <p className="font-semibold">{n.ssid}</p>
                <p className="text-sm text-gray-600">Signal: {n.signal}% • {n.security}</p>
              </div>
            </button>
          ))}
        </div>
      </div>
    );
  };

  /* --------------- header / nav --------------- */
  /* unchanged except we add the new tab */
  return (
    <div className="min-h-screen bg-gray-100">
      <div className="bg-white shadow-sm border-b">
        <div className="max-w-7xl mx-auto px-4 py-4 flex items-center justify-between">
          <div className="flex items-center space-x-3">
            <Wifi className="h-8 w-8 text-blue-600" />
            <div>
              <h1 className="text-2xl font-bold text-gray-900">Mireb WiFi Zone</h1>
              <p className="text-sm text-gray-600">Système de Gestion WiFi – RDC</p>
            </div>
          </div>
          <div className="text-right">
            <p className="text-sm text-gray-600">Forfait Mensuel</p>
            <p className="text-xl font-bold text-blue-600">$7.00</p>
          </div>
        </div>
      </div>

      <div className="bg-white border-b">
        <div className="max-w-7xl mx-auto px-4">
          <nav className="flex space-x-8">
            {[
              { id: 'dashboard', label: 'Tableau de Bord', icon: Users },
              { id: 'payment',   label: 'Paiements',     icon: CreditCard },
              { id: 'vouchers',  label: 'Vouchers',      icon: QrCode },
              { id: 'connect',   label: 'Se Connecter',  icon: Wifi }
            ].map(tab => (
              <button
                key={tab.id}
                onClick={() => setActiveTab(tab.id)}
                className={`flex items-center space-x-2 py-4 px-2 border-b-2 font-medium text-sm ${
                  activeTab === tab.id
                    ? 'border-blue-500 text-blue-600'
                    : 'border-transparent text-gray-500 hover:text-gray-700'
                }`}
              >
                <tab.icon className="h-5 w-5" />
                <span>{tab.label}</span>
              </button>
            ))}
          </nav>
        </div>
      </div>

      <div className="max-w-7xl mx-auto px-4 py-6">
        {activeTab === 'dashboard' && renderDashboard()}
        {activeTab === 'payment'   && renderPayment()}
        {activeTab === 'vouchers'  && renderVouchers()}
        {activeTab === 'connect'   && renderConnect()}
      </div>
    </div>
  );
};

export default MirebWifiSystem;
